{"ast":null,"code":"import api from './api';\nclass AdminService {\n  // Admin registration\n  async registerAdmin(adminData) {\n    const response = await api.post('/admin/register', adminData);\n    return response.data;\n  }\n\n  // Admin login\n  async loginAdmin(credentials) {\n    const response = await api.post('/admin/login', credentials);\n    return response.data;\n  }\n\n  // Get admin by ID\n  async getAdminById(adminId) {\n    const response = await api.get(`/admin/${adminId}`);\n    return response.data;\n  }\n\n  // Update admin\n  async updateAdmin(adminId, adminData) {\n    const response = await api.put(`/admin/${adminId}`, adminData);\n    return response.data;\n  }\n\n  // Create poll\n  async createPoll(adminId, pollData) {\n    const response = await api.post(`/admin/${adminId}/polls`, pollData);\n    return response.data;\n  }\n\n  // Get admin's polls\n  async getAdminPolls(adminId) {\n    const response = await api.get(`/admin/${adminId}/polls`);\n    return response.data;\n  }\n\n  // Get admin's active polls\n  async getActiveAdminPolls(adminId) {\n    const response = await api.get(`/admin/${adminId}/polls/active`);\n    return response.data;\n  }\n\n  // Update poll\n  async updatePoll(adminId, pollId, pollData) {\n    const response = await api.put(`/admin/${adminId}/polls/${pollId}`, pollData);\n    return response.data;\n  }\n\n  // Deactivate poll\n  async deactivatePoll(adminId, pollId) {\n    const response = await api.patch(`/admin/${adminId}/polls/${pollId}/deactivate`);\n    return response.data;\n  }\n\n  // Activate poll\n  async activatePoll(adminId, pollId) {\n    const response = await api.patch(`/admin/${adminId}/polls/${pollId}/activate`);\n    return response.data;\n  }\n\n  // Delete poll\n  async deletePoll(adminId, pollId) {\n    const response = await api.delete(`/admin/${adminId}/polls/${pollId}`);\n    return response.data;\n  }\n\n  // Get poll results (admin view)\n  async getPollResults(pollId) {\n    const response = await api.get(`/admin/polls/${pollId}/results`);\n    return response.data;\n  }\n\n  // Get poll options\n  async getPollOptions(pollId) {\n    const response = await api.get(`/admin/polls/${pollId}/options`);\n    return response.data;\n  }\n}\nconst adminService = new AdminService();\nexport default adminService;","map":{"version":3,"names":["api","AdminService","registerAdmin","adminData","response","post","data","loginAdmin","credentials","getAdminById","adminId","get","updateAdmin","put","createPoll","pollData","getAdminPolls","getActiveAdminPolls","updatePoll","pollId","deactivatePoll","patch","activatePoll","deletePoll","delete","getPollResults","getPollOptions","adminService"],"sources":["/Users/yatishbansal/Desktop/apc project/online-polling-system/frontend/src/services/adminService.js"],"sourcesContent":["import api from './api';\n\nclass AdminService {\n  // Admin registration\n  async registerAdmin(adminData) {\n    const response = await api.post('/admin/register', adminData);\n    return response.data;\n  }\n\n  // Admin login\n  async loginAdmin(credentials) {\n    const response = await api.post('/admin/login', credentials);\n    return response.data;\n  }\n\n  // Get admin by ID\n  async getAdminById(adminId) {\n    const response = await api.get(`/admin/${adminId}`);\n    return response.data;\n  }\n\n  // Update admin\n  async updateAdmin(adminId, adminData) {\n    const response = await api.put(`/admin/${adminId}`, adminData);\n    return response.data;\n  }\n\n  // Create poll\n  async createPoll(adminId, pollData) {\n    const response = await api.post(`/admin/${adminId}/polls`, pollData);\n    return response.data;\n  }\n\n  // Get admin's polls\n  async getAdminPolls(adminId) {\n    const response = await api.get(`/admin/${adminId}/polls`);\n    return response.data;\n  }\n\n  // Get admin's active polls\n  async getActiveAdminPolls(adminId) {\n    const response = await api.get(`/admin/${adminId}/polls/active`);\n    return response.data;\n  }\n\n  // Update poll\n  async updatePoll(adminId, pollId, pollData) {\n    const response = await api.put(`/admin/${adminId}/polls/${pollId}`, pollData);\n    return response.data;\n  }\n\n  // Deactivate poll\n  async deactivatePoll(adminId, pollId) {\n    const response = await api.patch(`/admin/${adminId}/polls/${pollId}/deactivate`);\n    return response.data;\n  }\n\n  // Activate poll\n  async activatePoll(adminId, pollId) {\n    const response = await api.patch(`/admin/${adminId}/polls/${pollId}/activate`);\n    return response.data;\n  }\n\n  // Delete poll\n  async deletePoll(adminId, pollId) {\n    const response = await api.delete(`/admin/${adminId}/polls/${pollId}`);\n    return response.data;\n  }\n\n  // Get poll results (admin view)\n  async getPollResults(pollId) {\n    const response = await api.get(`/admin/polls/${pollId}/results`);\n    return response.data;\n  }\n\n  // Get poll options\n  async getPollOptions(pollId) {\n    const response = await api.get(`/admin/polls/${pollId}/options`);\n    return response.data;\n  }\n}\n\nconst adminService = new AdminService();\nexport default adminService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}